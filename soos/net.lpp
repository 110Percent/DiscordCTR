#hdr
#include <3ds.h>

extern "C"
{
#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>
#include <unistd.h>
#include <string.h>
#include <errno.h>
#include <poll.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netdb.h>
#include <arpa/inet.h>
#include <netinet/in.h>
#include <netinet/tcp.h>
#include <fcntl.h>

#include "thing.h"
}

#include <string>
#include <map>
#include <vector>

using namespace std;
#end


namespace MM
{
    namespace NET
    {
        class HTTPC
        {
        public:
            map<string, string> reqhdr;
            map<string, string> reshdr;
            string rawreshdr;
            
            string reqmeth;
            
            string respstat;
            u32 respcode;
            
            string addr;
            u16 port;
            
            s64 resplen;
            string respbuf;
            
            HTTPC()
            {
                FullReset();
            }
            
            void FullReset()
            {
                reshdr.clear();
                rawreshdr.clear();
                rawreshdr.shrink_to_fit();
                
                port = 80;
                reqmeth = "GET";
            }
            
            void Reset()
            {
                resplen = 0LL;
                respcode = 0;
                respstat.clear();
                respbuf.clear();
                respbuf.shrink_to_fit();
            }
            
            void ResetHeader()
            {
                reqhdr.clear();
            }
            
            void SetAddr(const string& _addr)
            {
                addr = _addr;
            }
            
            void SetPort(u16 _port)
            {
                port = _port;
            }
            
            
        }
    }
}
